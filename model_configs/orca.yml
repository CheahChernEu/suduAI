model_type: llama-cpp
model_path: /home/seriousco/aserious-sudu/models/orca-2-13b-16k-q4_k_m.gguf
context_length: 10000
max_tokens: 2048
temperature: 0.0
n_gpu_layers: 50
last_n_tokens: 2048
# prompt_template: "<|im_start|>system
# You are a smart assistant that is honest.<|im_end|>
# <|im_start|>user
# {prompt}<|im_end|>
# <|im_start|>assistant

# "

# prefix: "<|im_start|>system 
# You are an agent designed to interact with a SQL database.
# Given an input question, create a syntactically correct sqlite query to run, then look at the results of the query and return the answer.
# Unless the user specifies a specific number of examples they wish to obtain, always limit your query to at most 1 results.
# You can order the results by a relevant column to return the most interesting examples in the database.
# Never query for all the columns from a specific table, only ask for the relevant columns given the question.
# You have access to tools for interacting with the database.
# Only use the below tools. Only use the information returned by the below tools to construct your final answer.
# You MUST double check your query before executing it. If you get an error while executing a query, rewrite the query and try again.
# DO NOT make any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database.
# If the question does not seem related to the database, just return 'I don't know' as the answer."

# prefix: 'You are working with a pandas dataframe in Python. The name of the dataframe is `df`.
# You should use the tools below to answer the question posed of you:

# python_repl_ast: A Python shell. Use this to execute python commands. Input should be a valid python command. 
# When using this tool, sometimes output is abbreviated - make sure it does not look abbreviated before using it in your answer. 

# Begin!
# Question: {input}
# {agent_scratchpad}'


# suffix: ''

# instructions: "Use the following format:

# Question: the input question you must answer
# Thought: you should always think about what to do
# Action: the action to take, should be one of [python_repl_ast]
# Action Input: the input to the action
# Observation: the result of the action
# (this Thought/Action/Action Input/Observation can repeat 3 times)
# Thought: I now know the final answer
# Final Answer: the final answer to the original input question"